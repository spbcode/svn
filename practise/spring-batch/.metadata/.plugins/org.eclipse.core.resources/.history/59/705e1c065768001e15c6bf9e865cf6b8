package com.coderelated.dbTOCSVTOawss3.batchJobReader;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;

import org.springframework.batch.item.ItemReader;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.amazonaws.services.s3.model.S3Object;
import com.amazonaws.services.s3.model.S3ObjectInputStream;
import com.coderelated.dbTOCSVTOawss3.model.Users;
import com.coderelated.dbTOCSVTOawss3.service.S3Service;


@Component
public class S3ItemReader implements ItemReader<List<Users>> {

    private final S3Service s3Service;
    private List<Users> usersList;
    private Iterator<Users> userIterator;

    @Autowired
    public S3ItemReader(S3Service s3Service) {
        this.s3Service = s3Service;
    }

    @Override
    public List<Users> read() throws Exception {
        if (usersList == null) {
            // Use the AWS SDK to download the S3 object
            String s3Key = "CustomerNew.csv";
            S3Object s3Object = s3Service.getCSVObject(s3Key);
            try (S3ObjectInputStream inputStream = s3Object.getObjectContent()) {
                usersList = parseCsv(inputStream);
                userIterator = usersList.iterator();
            }
        }

        if (userIterator.hasNext()) {
            return Collections.singletonList(userIterator.next());
        } else {
            return null;
        }
    }

    private List<Users> parseCsv(InputStream inputStream) throws IOException {
        List<Users> usersList = new ArrayList<>();

        try (BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream))) {
            // Skip the header
            reader.readLine();

            String line;
            while ((line = reader.readLine()) != null) {
                String[] parts = line.split(",");
                if (parts.length == 2) {
                    Users user = new Users();
                    String idWithoutQuotes = parts[0].replaceAll("\"", "").trim();
                    user.setId(Integer.parseInt(idWithoutQuotes));
                    user.setName(parts[1].trim());
                    usersList.add(user);
                }
            }
        }

        return usersList;
    }
}

